include: "../config.py"

KLIST=[13, 21, 25]
EXPNAME="genomes"

DIR=OUTDIR+"/"+EXPNAME
GENOMES_FILE=INDIR+"/"+EXPNAME+".fasta"

rule all:
    input:
        DIR+'/not_mapping_'+EXPNAME+'.tsv',
        DIR+'/bowtie_summary.txt'


rule kallisto_index:
    output:
        DIR+'/kallisto_index_{K}.idx'
    threads: 1
    shell:
        '{KALLISTO} index -k {wildcards.k} -i {INDEX_FILE} ' +
        '{GENOMES_FILE}'

rule kallisto_k:
    input:
        index=DIR+"/kallisto_index_{K}.idx",
        r1=INDIR+"/{sample}"+SUFFIX1,
        r2=INDIR+"/{sample}"+SUFFIX2
    output:
        outh5=DIR+"/{sample}_kallisto_{K}_out/abundance.h5",
        outsam=DIR+"/{sample}_kallisto_{K}_out_pseudoal.sam"
    log:
        DIR+"/{sample}_kallisto_{K}_out/kallisto.log"
    threads: 8

    shell:
        '{KALLISTO} quant -i {INDEX_FILE} -o "{DIR}/{sample}_kallisto_{K}_out" -b 100 --pseudobam --threads={threads} '
        '{index.r1} {index.r2} '
        '>{output.outsam}  2>>{log}; '
        '{KALLISTO} h5dump -o "{DIR}/{sample}_kallisto_{K}_out" {output.outh5}'

rule samtools_k:
    input:
        DIR+"/{sample}_kallisto_{K}_out_pseudoal.sam"
    output:
        out=DIR+"/{sample}_kallisto_{K}_out/pseudoal_sorted.bam",
        outdir=DIR+"/{sample}_kallisto_{K}_out"
    shell:
        'mv {input} {output.outdir}/pseudoal.sam; '
        'samtools view -b {output.outdir}/pseudoal.sam > {output.outdir}/pseudoal.bam  && '
        'samtools sort -@ 2 {output.outdir}/pseudoal.bam -o {output.out} && samtools index {output.out} && {output.outdir}/pseudoal.bam ) '

rule munge:
    input:
        expand(DIR+"/{sample}_kallisto_{K}_out/abundance.h5", sample=SAMPLES, K = KLIST)
    output:
        outfile=DIR+'/not_mapping_{EXPNAME}.tsv',
        outfile2=DIR+'/not_mapping_{EXPNAME}.tex'
    shell:
        'python2 ../why_not_mapping.py {DIR} {output.outfile} {output.outfile2} {KLIST}'


rule bowtie_index:
    input: GENOMES_FILE
    output:
        index=DIR+'/bowtie2_index'
    log:
        DIR+'/bowtie2_sensitive.log'
    threads: 8
    shell:
        BOWTIEDIR + '/bowtie2-build --threads {threads}'+ GENOMES_FILE +'{output.index} 2>> {log} >> {log}'

rule bowtie:
    input:
        index=DIR+"/bowtie_index.idx",
        r1=INDIR+"/{sample}"+SUFFIX1,
        r2=INDIR+"/{sample}"+SUFFIX2
    output:
        outsam=temp(DIR+"/{sample}_bowtie.sam"),
        log=DIR+"/{sample}_bowtie.log"
    threads: 8
    shell:
        BOWTIEDIR + '/bowtie2 --threads {threads} --very-sensitive -N 1'
        + ' -x {input.index} -1 {input.r1} -2 {input.r1} ' +
        "-S {output.outsam} 2>> {output.log}"

rule samtools_bowtie:
    input:
        DIR+"/{sample}_bowtie.sam"
    output:
        bam=DIR+"/{sample}_bowtie_sorted.bam",
        idx=DIR+"/{sample}_bowtie_sorted.bam.bai"
    shell:
        'samtools view -b {input} | samtools sort -@ 2 -o {output.bam} && samtools index {output.bam} '

rule bowtie_summary:
    input:
        expand(DIR+"/{sample}_bowtie.log", sample=SAMPLES)
    output:
        DIR+'/bowtie_summary.txt'
    shell:
        'echo `date` >> {output};' +
        ' python2 ../parse_bowtie_result.py {input} >> {output}; ' +
        ' python2 ../mean_mappability_from_bam.py {input} >> {output}'



#rule clean:
#    shell: 'rm -rf out.* indices/*'
